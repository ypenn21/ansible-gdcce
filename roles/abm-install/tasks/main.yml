## Check to make sure all hosts are active
  - name: Pre ABM Install--Fail if number of available hosts != in-play count
    fail:
      msg: "Failure caused by expected {{ ansible_play_hosts_all | length }} hosts but have {{ ansible_play_hosts | length }}. Check failures above to see what issue happened."
    when: (ansible_play_hosts_all | length) != (ansible_play_hosts | length)
    tags:
    - verify

### Setup GSA keys for box
  - name: "Setup and download GSA keys for provisioning"
    import_tasks: gsa-key-setup.yml
    tags:
    - abm-install
    - gsa-setup
    - keys-setup

### Create or ensure root folder exists for storage provider
  - name: Create the storage provider folder(s)
    ansible.builtin.file:
      path: "{{ item }}"
      state: directory
      mode: '0755'
    loop: "{{ storage_provider_roots }}"
    tags:
    - abm-install
    - abm-config
    - storage-setup

### Create Local PVC folder (future will be mounted or something)
  - name: Create PVC Folder
    file:
      path: '{{ local_pvc_mount }}'
      state: directory
      mode: '0755'
    tags:
    - abm-install
    - abm-config
    - storage-setup

### Create install folder
  - name: Create isolated install folder
    file:
      path: '{{ abm_workspace_folder }}/{{ cluster_name }}'
      state: directory
      mode: '0755'
    tags:
    - abm-install
    - abm-config
    - build-config

### Create cluster configuration file
  - name: "Place configuration file into ABM install folder"
    template:
      src: cluster-config.yaml.j2
      dest: "{{ abm_workspace_folder }}/{{ cluster_name }}/{{ cluster_name }}.yaml"
    when: "(primary_cluster_machine is defined) and (primary_cluster_machine == true)"
    tags:
    - abm-install
    - abm-config
    - build-config

### Check if cluster is installed already (found in gke hub registration)
  - name: Check to see if ABM has been installed already
    command:
      cmd: gcloud container hub memberships list --filter="name~{{ cluster_name }}" --format="value(name)"
    register: gke_registered
    when:
      - primary_cluster_machine is defined
      - primary_cluster_machine == True
    tags:
    - abm-install
    - abm-create
    - build-config

  - name: Set fact if the cluster should be installed or not
    set_fact:
      install_cluster: "{{ cluster_name not in gke_registered.stdout }}"
    when:
      - primary_cluster_machine is defined
      - primary_cluster_machine == True

### For caution, re-run setup of VXLAN
  - name: Run startup for vxlan
    command:
      cmd: "/var/setup-vxlan.sh"
    when:
      - is_cloud_resource is defined
      - is_cloud_resource == True
    tags:
    - network-vxlan
    - abm-install
    - abm-config

### Run VXLAN is up script (only for cloud resources)
  - name: Run script for vxlan status
    command:
      cmd: "/var/vxlan-status-check.sh"
    when:
      - is_cloud_resource is defined
      - is_cloud_resource == True
    tags:
    - network-vxlan
    - abm-install
    - abm-config

### Check cluster configuration
  - name: Validate configuration file updates
    command:
      cmd: bmctl check config --cluster={{ cluster_name }}
    args:
      chdir: "{{ abm_install_folder }}"
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: "{{ remote_keys_folder }}/provisioning-gsa.json"
      PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
    when:
    - primary_cluster_machine is defined
    - primary_cluster_machine == True
    - install_cluster == True
    tags:
    - abm-install
    - abm-config
    - build-config

### Create cluster configuration
  - name: "Create cluster {{ cluster_name }} -- (be patient, this takes 20-40 minutes)"
    command: bmctl create cluster --cluster={{ cluster_name }} --quiet --v 0
    when:
    - primary_cluster_machine is defined
    - primary_cluster_machine == True
    - install_cluster == True
    args:
      chdir: "{{ abm_install_folder }}"
      creates: "{{ abm_install_folder }}/bmctl-workspace/{{ cluster_name }}/{{ cluster_name }}-kubeconfig"
    async: "{{ abm_install_sync_timeout_seconds }}"
    poll: "{{ abm_install_sync_poll_seconds }}"
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: "{{ remote_keys_folder }}/provisioning-gsa.json"
      PATH: "/usr/local/bin:{{ ansible_env.PATH }}"
    tags:
    - abm-install
    - abm-create

  - name: Re-gather facts
    setup:
    when: ansible_facts == {}
    tags:
    - abm-check-membership

  - name: Make sure the GKE Hub membership exists
    command:
      cmd: gcloud container hub memberships describe {{ cluster_name }} --format="value(name)" --project {{ google_project_id }}
    environment:
      GOOGLE_APPLICATION_CREDENTIALS: "{{ remote_keys_folder }}/provisioning-gsa.json"
    when:
    - primary_cluster_machine is defined
    - primary_cluster_machine == True
    tags:
    - abm-install
    - abm-verify-install
    - abm-check-membership
    - gcloud-command

#### Post Install Activities
  - name: Create PVC Folder
    file:
      path: '{{ kubeconfig_shared_root }}'
      state: directory
      mode: '0755'
    tags:
    - abm-install
    - abm-post-install

### Setup kubeconfig for all clusters
  - name: "Share kubeconfig with others in cluster"
    import_tasks: share-kubeconfig.yml
    tags:
    - abm-post-install
    - abm-install
    - kubeconfig-share

  - name: "Setup profile.d for kubeconfig"
    template:
      src: profile-user.sh.j2
      dest: "/etc/profile.d/kubeconfig.sh"
    tags:
    - abm-install
    - abm-post-install
