###
### This file runs after ExternalSecrets has been installed into the cluster
###

###
### Ideally this will be moved to TF in the future. Two APIs are in alpha stage of development,
### projects.locations.fleets.create and projects.locations.global.memberships.initializeHub. The
### first will create a fleet and the second will create the fleet workload identity pool.
### Idea is that once those APIs are called, in that order, TF would perform the process below.
###
- name: Setup Workload Identity for External Secrets
  command:
    cmd: gcloud iam service-accounts add-iam-policy-binding --role roles/iam.workloadIdentityUser --member "serviceAccount:{{ google_project_id }}.svc.id.goog[external-secrets/external-secrets]" es-k8s-{{ cluster_name }}@{{ google_service_account_project_id }}.iam.gserviceaccount.com --project {{ google_service_account_project_id }}
  when:
    - (primary_cluster_machine is defined)
    - (primary_cluster_machine == true)
    - (use_workload_identity_for_external_secrets | bool)

# TODO: Setup a conditional for idempotency (does this already exist?)
- name: "Test for External Secrets secret"
  include_tasks: kubectl-presence.yml
  vars:
    name: "gcp-store-creds"
    type: "secrets"
    namespace: "external-secrets"
    kubeconfig: "{{ kubeconfig_shared_location }}"
    fact_name: "has_es_secret"
  when:
  - (primary_cluster_machine is defined)
  - (primary_cluster_machine == true)
  - (not use_workload_identity_for_external_secrets | bool)
  tags:
  - external-secrets-operator
  - external-secrets

- name: "Create secret for External Secrets"
  shell: |
    kubectl create ns external-secrets || true
    kubectl create secret generic gcp-store-creds --from-file={{ abm_install_folder }}/keys/external-secrets-k8s-creds.json -n external-secrets || true
    kubectl label secret gcp-store-creds -n external-secrets type=gcpsm --overwrite
  ignore_errors: yes
  environment:
    KUBECONFIG: "{{ kubeconfig_shared_location }}"
  when:
  - (primary_cluster_machine is defined)
  - (primary_cluster_machine == true)
  - (not use_workload_identity_for_external_secrets | bool)
  - (has_es_secret == false)
  tags:
  - external-secrets-secret
  - external-secrets

- name: Create folder for External Secrets files
  file:
    path: '{{ external_secrets_files }}'
    state: directory
    mode: '0755'
  tags:
  - external-secrets-operator
  - external-secrets

# This is applied in provisioning due to the Project being a part of the data
- name: Copy Secrets Manager Store
  template:
    src: external-secrets-store.yaml.j2
    dest: "{{ external_secrets_files }}/external-secrets-store.yaml"
  when:
  - (primary_cluster_machine is defined)
  - (primary_cluster_machine == true)
  tags:
  - external-secrets
  - external-secrets-store

- name: "Add ClusterSecretStore (specific to this cluster)"
  command:
    cmd: "kubectl apply -f {{ external_secrets_files }}/external-secrets-store.yaml"
  retries: "{{ default_retry_count }}"
  delay: "{{ default_retry_delay }}"
  register: cscresult
  until: cscresult.rc == 0
  environment:
    KUBECONFIG: "{{ kubeconfig_shared_location }}"
  when:
    - (primary_cluster_machine is defined)
    - (primary_cluster_machine == true)
  tags:
  - external-secrets
  - external-secrets-store
