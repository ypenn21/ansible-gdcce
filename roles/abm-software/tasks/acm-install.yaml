
### ACM
- name: "Enable ACM API in GCP"
  command:
    cmd: gcloud beta container hub config-management enable
  run_once: true # fleet-wide operation, only needs to run once per instance run 
  when: "(primary_cluster_machine is defined) and (primary_cluster_machine == true)"
  environment:
    PATH: "{{ tools_base_path }}/google-cloud-sdk/bin:{{ ansible_env.PATH }}"
  tags:
  - abm-software
  - enable-acm
  - gcloud-mutate

### ACM Setup

# Check for ACM Operator
- name: "Test for config-management-system namespace"
  include_tasks: kubectl-presence.yml
  vars:
    name: "config-management-system"
    type: "namespaces"
    namespace: ""
    kubeconfig: "{{ kubeconfig_shared_location }}"
    fact_name: "has_acm_ns"
  when: "(primary_cluster_machine is defined) and (primary_cluster_machine == true)"
  tags:
  - acm-operator

# # Download operator
- name: "Create config-management-system namespace if needed"
  command:
    cmd: "kubectl create ns config-management-system"
  environment:
    KUBECONFIG: "{{ kubeconfig_shared_location }}"
  when:
    - (primary_cluster_machine is defined)
    - (primary_cluster_machine == true)
    - (has_acm_ns == false)
  tags:
  - acm-root-repo

#### Root Repo Configuration

# NOTE: If the git-creds secret already exists, no action is taken. There is NO effort to determine what type of secret so switching between types requires removal of the `git-creds` secret within the cluster
- name: "Test for existing RootRepo git-creds secret"
  include_tasks: kubectl-presence.yml
  vars:
    name: "{{ root_repository_git_secret_name }}"
    type: "secrets"
    namespace: "config-management-system"
    kubeconfig: "{{ kubeconfig_shared_location }}"
    fact_name: "has_root_repo_secret"
  tags:
  - acm-root-repo

- name: "Create dependencies for RootRepos (if not exists) [Token Method]"
  import_tasks: "config-acm-repo-tokens.yaml"
  when:
  - (root_repository_git_auth_type == "token")
  - (primary_cluster_machine is defined)
  - (primary_cluster_machine == true)
  - (has_root_repo_secret is defined)
  - (has_root_repo_secret == false)
  tags:
  - acm-root-repo
  - acm-root-repo-token-method

- name: "Create dependencies for RootRepos (if not exists) [SSH Method]"
  import_tasks: "config-repos-ssh.yaml"
  when:
  - (root_repository_git_auth_type == "ssh")
  - (primary_cluster_machine is defined)
  - (primary_cluster_machine == true)
  - (has_root_repo_secret is defined)
  - (has_root_repo_secret == false)
  tags:
  - acm-root-repo
  - acm-root-repo-ssh-method

# Check for ACM Operator
- name: "Test for config-management operator presence"
  include_tasks: kubectl-presence.yml
  vars:
    name: "config-management"
    type: "configmanagements.configmanagement.gke.io"
    namespace: ""
    kubeconfig: "{{ kubeconfig_shared_location }}"
    fact_name: "has_acm_operator"
  when: "(primary_cluster_machine is defined) and (primary_cluster_machine == true)"
  tags:
  - acm-operator

- name: "Copy over apply-spec file"
  template:
    src: apply-spec.yaml.j2
    dest: "{{ acm_config_files }}/apply-spec.yaml"
  when:
    - (primary_cluster_machine is defined)
    - (primary_cluster_machine == true)
  tags:
  - acm-config-management
  - updated-acm
  - generate-apply-sync

- name: "Install ACM Operator"
  shell: |
      gcloud beta container fleet config-management apply --membership={{ cluster_name }} --config={{ acm_config_files }}/apply-spec.yaml --project={{ google_project_id }}
  args:
    executable: /bin/bash
  when:
  - (primary_cluster_machine is defined)
  - (primary_cluster_machine == true)
  - (has_acm_operator == false)
  retries: "{{ default_retry_count }}"
  delay: "{{ default_retry_delay }}"
  register: result
  until: result.rc == 0
  tags:
  - acm-operator
  - gcloud-command

###
### Configure PrimaryRootRepo
###
- name: Copy RootRepo Sync Config File
  template:
    src: root-sync.yaml.j2
    dest: "{{ acm_config_files }}/root-sync.yaml"
  when:
    - (primary_cluster_machine is defined)
    - (primary_cluster_machine == true)
  tags:
  - acm-root-repo
  - generate-root-sync

- name: "Test for Root Repo CRDs installed"
  include_tasks: kubectl-presence.yml
  vars:
    name: "{{ primary_root_sync_name }}"
    type: "RootSync"
    namespace: "config-management-system"
    kubeconfig: "{{ kubeconfig_shared_location }}"
    fact_name: "has_root_repo_installed"
  when:
    - (primary_cluster_machine is defined)
    - (primary_cluster_machine == true)
  tags:
  - acm-root-repo

# - name: "Apply Primary Root Repo configuration"
#   shell: |
#     kubectl apply -f {{ acm_config_files }}/root-sync.yaml
#     sleep 10s
#     kubectl apply -f {{ acm_config_files }}/root-sync.yaml
#   environment:
#     KUBECONFIG: "{{ kubeconfig_shared_location }}"
#   retries: "{{ default_retry_count }}"
#   delay: "{{ default_retry_delay }}"
#   register: root_apply_result
#   until: root_apply_result.rc == 0
#   when:
#     - (primary_cluster_machine is defined)
#     - (primary_cluster_machine == true)
#     - (has_root_repo_installed == false)
#   tags:
#   - acm-root-repo

## TODO: If the above fails, stop all
- name: Primary Root Repo has not deployed correctly
  fail:
    msg: "Primary Root Repo failed. Failure caused by expected {{ ansible_play_hosts_all | length }} hosts but have {{ ansible_play_hosts | length }}"
  when: (ansible_play_hosts_all | length) != (ansible_play_hosts | length)
  tags:
  - acm-root-repo

- name: "Wait for RootReconciler deployment to be ready"
  command:
    cmd: kubectl wait --for=condition=available --timeout=600s deployment.apps/root-reconciler -n config-management-system
  environment:
    KUBECONFIG: "{{ kubeconfig_shared_location }}"
  retries: "{{ default_retry_count }}"
  delay: "{{ default_retry_delay }}"
  register: root_recon_result
  until: root_recon_result.rc == 0
  when:
    - (primary_cluster_machine is defined)
    - (primary_cluster_machine == true)
    - (has_root_repo_installed == false)
  tags:
  - acm-root-repo

- name: "Wait on ExternalSecrets to be deployed coming from RootRepo"
  shell: |
    kubectl wait --for=condition=available --timeout=600s deployment.apps/external-secrets -n external-secrets
  retries: "{{ default_retry_count }}"
  delay: "{{ default_retry_delay }}"
  register: external_secret_deployment
  until: external_secret_deployment.rc == 0
  environment:
    KUBECONFIG: "{{ kubeconfig_shared_location }}"
  when:
    - (primary_cluster_machine is defined)
    - (primary_cluster_machine == true)
  tags:
  - acm-root-repo
  - external-secret-install

