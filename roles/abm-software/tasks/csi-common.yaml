###
### This file holds common SDS/CSI installation tasks
###
### All SDSs are installed using Cluster Trait Repo concept. CTR is a RootSync object located in a git-repo with the specific configurations
###   of the installation and configuration. CTRs can rely on a GCS bucket for backups and a Google Secret called {{ storage_provider_auth_secret }}
###

###
### 1. If no SDS-specific `git-creds` in k8s, set that up in Google Secrets Manager
### 2. If no GCS bucket for the SDS is created, create a new one
### 3. Apply CTR to cluster
###

###
### git-creds secret for SDS Cluster Trait Repo
###
- name: "Test for existing SDS git-creds secret"
  include_tasks: kubectl-presence.yml
  vars:
    name: "{{ storage_provider_auth_secret }}"
    type: "secrets"
    namespace: "config-management-system"
    kubeconfig: "{{ kubeconfig_shared_location }}"
    fact_name: "has_sds_repo_secret"
  tags:
  - sds-common-setup

# Create GCP Secret if not exist
- name: "Add SDS git-creds Google Secrets if not exist"
  run_once: true # confirmed, this is fleet-level so run-once is OK
  shell: |
    EXISTS=$(gcloud secrets list --filter="{{ storage_provider_auth_secret }}" --format="value(name)" --project="{{ google_project_id }}")
    if [ -z "${EXISTS}" ]]; then
      gcloud secrets create {{ storage_provider_auth_secret }} --replication-policy="automatic" --project="{{ google_project_id }}"
      echo "ADDED"
    fi
  register: sds_creds
  when:
  - (primary_cluster_machine is defined)
  - (primary_cluster_machine == true)
  - (has_sds_repo_secret is not defined)
  - (has_sds_repo_secret != true)
  tags:
  - sds-common-setup
  - sds-git-creds
  - gcloud-mutate

# Create a new secret version if none are active or exist
- name: "Add new version to SDS git-creds to Google Secrets Manager if none exist or none active"
  run_once: true # confirmed, this is fleet-level so run-once is OK
  shell: |
    EXISTS=$(gcloud secrets versions list {{ storage_provider_auth_secret }} --filter="state=enabled" --format="value(name)"  --project="{{ google_project_id }}")
    if [ -z "${EXISTS}" ]; then
      echo -n "{\"token\"{{':'}} \"{{ scm_token_token }}\", \"username\"{{':'}} \"{{ scm_token_user }}\"}" | gcloud secrets versions add {{ storage_provider_auth_secret }} --project="{{ google_project_id }}" --data-file=-
      echo "ADDED"
    fi
  register: sds_secret_version
  changed_when: '"ADDED" in sds_secret_version.stdout_lines'
  when:
  - (primary_cluster_machine is defined)
  - (primary_cluster_machine == true)
  - (has_sds_repo_secret is not defined)
  - (has_sds_repo_secret != true)
  tags:
  - sds-common-setup
  - sds-git-creds
  - gcloud-mutate

# Check on GCS Bucket status
- name: Check SDS GCS Backup Bucket
  run_once: true  # confirmed, this is fleet-level so run-once is OK
  ignore_errors: true
  command:
    cmd: gsutil -q ls gs://{{ storage_provider_gcs_bucket_name }}/.dontremove > /dev/null 2>&1
  changed_when: has_bucket.rc > 0
  register: has_bucket
  when:
  - (primary_cluster_machine is defined)
  - (primary_cluster_machine == true)
  tags:
  - sds-common-setup
  - sds-bucket
  - gcloud-command

- name: Create SDS Backup Bucket
  run_once: true # confirmed, this is fleet-level so run-once is OK
  shell: |
    gsutil mb -p "{{ google_project_id }}" gs://{{ storage_provider_gcs_bucket_name }}
    echo "do not remove this file" | gsutil cp - gs://{{ storage_provider_gcs_bucket_name }}/.dontremove
  args:
    executable: /bin/bash
  when:
  - (primary_cluster_machine is defined)
  - (primary_cluster_machine == true)
  - has_bucket.rc > 0
  tags:
  - sds-common-setup
  - sds-bucket
  - gcloud-mutate

# Apply SDS CTR to cluster
- name: Create SDS file/folder location
  file:
    path: '{{ sds_config_files }}'
    state: directory
    mode: '0755'
  when:
  - (primary_cluster_machine is defined)
  - (primary_cluster_machine == true)
  tags:
  - sds-common-setup
  - sds-cluster-trait-repo

- name: Copy SDS Cluster Trait Repo Config
  template:
    src: sds-cluster-trait-repo.yaml.j2
    dest: "{{ sds_config_files }}/sds-cluster-trait-repo.yaml"
  when:
  - (primary_cluster_machine is defined)
  - (primary_cluster_machine == true)
  tags:
  - sds-common-setup
  - sds-cluster-trait-repo

- name: "Apply SDS Cluster Trait Repo"
  shell: |
    kubectl apply -f {{ sds_config_files }}/sds-cluster-trait-repo.yaml
  environment:
    KUBECONFIG: "{{ kubeconfig_shared_location }}"
  when:
  - (primary_cluster_machine is defined)
  - (primary_cluster_machine == true)
  tags:
  - sds-common-setup
  - sds-cluster-trait-repo