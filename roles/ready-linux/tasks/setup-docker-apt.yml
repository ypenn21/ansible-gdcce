- name: Stop docker, if started
  ansible.builtin.service:
    name: docker
    state: stopped
  ignore_errors: yes

# TODO: Also remove snap docker
#### Setup Docker
- name: Remove all docker-based existing packages
  apt:
    pkg:
    - docker
    - docker-engine
    - docker.io
    - containerd
    - runc
    state: absent

- name: Add Docker GPG apt Key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present

- name: Add Docker Repository
  apt_repository:
    repo: deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
    state: present

- name: Install Docker 19+ packages
  apt:
    pkg:
    # Docker Community edition
    - docker-ce
    - docker-ce-cli
    - containerd.io
    state: latest
    update_cache: true
  when:
  - target_os == "ubuntu"

- name: Setup proxy for docker (if needed)
  ansible.builtin.file:
    path: "{{ docker_service_path }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  when:
  - proxy_has_http_proxy is true or proxy_has_https_proxy is true
  tags:
  - http-proxy
  - docker-proxy

- name: "Place http-proxy conf in docker system service directory"
  template:
    src: docker-http-proxy.conf.j2
    dest: "{{ docker_service_path }}/http-proxy.conf"
  when:
  - proxy_has_http_proxy is true or proxy_has_https_proxy is true
  tags:
  - http-proxy
  - docker-proxy

- name: Start docker, if not started
  ansible.builtin.service:
    name: docker
    state: started
    daemon_reload: true
  register: task_result
  until: task_result is succeeded
  retries: "{{ default_retry_count }}"
  delay: "{{ default_retry_delay }}"

- name: Get Docker version
  command: docker version
  register: docker

- name: Show output with docker version
  debug:
    msg: "{{ docker.stdout }}"

- name: Add the docker group (NOTE, users will need to be manually added with `usermod` if needed)
  group:
    name: docker
    state: present

# sudo usermod -aG docker root    [WARNING]: 'append' is set, but no 'groups' are specified. Use 'groups' for appending new groups.This will change to an error in Ansible 2.14.
- name: Add ansible_user user to "docker" group
  user:
    name: "{{ ansible_user }}"
    groups: "docker"
    append: yes

- name: Reset connection allowing docker group
  meta: reset_connection

- name: Verify docker can be run
  command:
    cmd: docker ps
  register: docker_output
  ignore_errors: yes

- name: Output of Docker PS run
  debug:
    msg: "{{ docker_output.stdout }}"

- name: Set GCloud to authenticate docker
  command:
    cmd: gcloud auth configure-docker -q
